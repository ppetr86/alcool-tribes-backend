#Database properties
spring.datasource.url=${DB_URL}
spring.datasource.username=${USERNAME}
spring.datasource.password=${PWD}
spring.jpa.properties.hibernate.dialect=${HIB_DIA}
spring.jpa.hibernate.ddl-auto=${HIB_UPDATE:update}
spring.logging.level.org.hibernate.SQL=debug
spring.jpa.show-sql=true

#Security properties
jwt.secret=${JWT_SECRET}
jwt.expire-days=${JWT_EXPIRE_DAYS:1}

#Logging properties
logging.level.root=${TRIBES_LOG_LVL:INFO}

#Model properties/variables
building.townhall.buildingTime=120
building.farm.buildingTime=60
building.mine.buildingTime=60
building.academy.buildingTime=90
building.townhall.hp=200
building.farm.hp=100
building.mine.hp=100
building.academy.hp=150

troop.buildingTime = 30
troop.buildingCosts = 25
troop.hp = 20
troop.food = -5
troop.attack = 10
troop.defence = 5

#   Protocol used by SMTP server
spring.mail.protocol=smtp
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
# Sender's user mailbox name
spring.mail.username=${EMAIL_USER}
spring.mail.password=${EMAIL_PWD}
spring.mail.properties.mail.smtp.auth = true
#Some SMTP servers require a TLS connection, so the property spring.mail.properties.mail.smtp.starttls.enable is used to enable a TLS-protected connection.
spring.mail.properties.mail.smtp.starttls.enable = true
# validationURL - a link in the mail
validationUrl=http://localhost:8080/register/confirm?username=

#secure token configuration for email verification
#60 * 60 * 24 // setting as 8 hours,
jdj.secure.token.validity=86400
site.base.url.http=http://localhost:8080
site.base.url.https=http://localhost:8080