#Database properties
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.path=/h2
spring.h2.console.enabled=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.flyway.enabled=false
#Security properties
jwt.secret=test
jwt.expire-days=1
#Logging properties
logging.level.root=INFO
#Model properties/variables
building.academy.buildingCosts=100
building.academy.buildingCosts.firstLevel=150
building.academy.buildingTime=90
<<<<<<< HEAD
building.academy.hp=150

building.farm.buildingCosts=100
building.farm.buildingCosts.firstLevel=100
building.farm.buildingTime=60
=======
building.townhall.hp=200
>>>>>>> development
building.farm.hp=100

building.mine.buildingCosts=100
building.mine.buildingCosts.firstLevel=100
building.mine.buildingTime=60
building.mine.hp=100
<<<<<<< HEAD

building.townhall.buildingCosts=200
building.townhall.buildingCosts.firstLevel=200
building.townhall.buildingTime=120
building.townhall.hp=200

=======
building.academy.hp=150
troop.buildingTime=30
troop.buildingCosts=25
troop.hp=20
troop.food=-5
>>>>>>> development
troop.attack=10
troop.buildingCosts=25
troop.buildingTime=30
troop.defence=5
<<<<<<< HEAD
troop.food=-5
troop.hp=20

=======
>>>>>>> development
resourceEntity.food=5
resourceEntity.gold=5
########## SMTP configuration to send out emails ##########
#   Protocol used by SMTP server
spring.mail.protocol=smtp
spring.mail.host=smtp.mailtrap.io
spring.mail.port=2525
# Sender's user mailbox name
spring.mail.username=${EMAIL_USER}
spring.mail.password=${EMAIL_PWD}
spring.mail.properties.mail.smtp.auth=true
#Some SMTP servers require a TLS connection, so the property spring.mail.properties.mail.smtp.starttls.enable is used to enable a TLS-protected connection.
spring.mail.properties.mail.smtp.starttls.enable=true
#secure token configuration for email verification
#60 * 60 * 24 // setting as 8 hours,
jdj.secure.token.validity=86400
site.base.url.http=http://localhost:8080
site.base.url.https=http://localhost:8080

########## Files upload configuration
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=100MB
# Max Request Size
spring.servlet.multipart.max-request-size=100MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-avatar-dir=./src/main/resources/static/avatars